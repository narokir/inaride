<%= simple_form_for(@map) do |f| %>
  <% if @map.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@map.errors.count, "error") %> prohibited this map from being saved:</h2>

      <ul>
      <% @map.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="span6">
    <%= f.input :origin, :autocomplete => "off", :input_html => { :class => 'span5' } %>
    <%= f.input :destination, :autocomplete => "off",:input_html => { :class => 'span5' } %>
    <%= f.input :waypoint_1 %>
  </div>
    <%= f.input :longitude %>
    <%= f.input :latitude %>
    <%= f.input :gmaps %>
    <%= f.submit :class => ' btn btn-large btn-primary' %>
<% end %>

<script type="text/javascript" charset="utf-8">
    var map;
    function initialize() {
        var mapOptions = {
            zoom: 8,
            center: new google.maps.LatLng(-34.397, 150.644),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map_canvas'),
                mapOptions);
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>
<div id="map_canvas"></div>


<!--

  function initialize() {
    var defaultZoom = 12; // Why zoomed in? Because it looks good.
    var mapOptions = {
      center: new google.maps.LatLng(42.3584308, -71.0597732),
      zoom: defaultZoom,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById('map'),mapOptions);

    //  Centering the map in Boston
    var mylat = document.getElementById("map_latitude").value;
    var mylng = document.getElementById("map_longitude").value;

    if (jQuery.isEmptyObject(mylat)) {
	var mylat = '42.3584308';
	var mylng = '-71.0597732';
	var defaultZoom = 12; // decrease zoom to 13 if there is no selection from user.
    };


    // set center point of map to be of the Marker or the Default City
    var centrePoint = new google.maps.LatLng(mylat, mylng);

    map.setCenter(centrePoint);
    map.setZoom(defaultZoom);

    // Add autocomplete to Origin and Destination
    var origin = document.getElementById('map_origin');
    var autocomplete = new google.maps.places.Autocomplete(origin);
    var destination = document.getElementById('map_destination');
    var autocomplete = new google.maps.places.Autocomplete(destination);

    autocomplete.bindTo('bounds', map);

    var infowindow = new google.maps.InfoWindow();
    var marker = new google.maps.Marker({
      map: map
    });

    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      infowindow.open(Gmaps.map.serviceObject,marker);
      var place = autocomplete.getPlace();

      if (place.geometry.viewport) {
	map.fitBounds(place.geometry.viewport);
	}
	else
	{
	  map.setCenter(place.geometry.location);
	  map.setZoom(17);  // Why 17? Because it looks good.
	};

    // add custom Marker Image
    var image = new google.maps.MarkerImage(
      "http://localhost:3000/assets/pin2.png",
      new google.maps.Size(20, 35),
      new google.maps.Point(0, 0),
      new google.maps.Point(17, 34),
      new google.maps.Size(20, 35));
	marker.setIcon(image);
	marker.setPosition(place.geometry.location);

      var address = '';
      if (place.address_components) {
	address = [
	  (place.address_components[0] && place.address_components[0].short_name || ''),
	  (place.address_components[1] && place.address_components[1].short_name || ''),
	  (place.address_components[2] && place.address_components[2].short_name || '')
	].join(' ');
      }
      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);
    });

    // add a draggable marker
    marker = new google.maps.Marker({
      map:map,
      draggable:true,
      animation: google.maps.Animation.DROP,
      position: centrePoint
      });

    var defaultImage = new google.maps.MarkerImage(
    "http://localhost:3000/assets/pin2.png",
    new google.maps.Size(20, 35),
    new google.maps.Point(0, 0),
    new google.maps.Point(17, 34),
    new google.maps.Size(20, 35));
    marker.setIcon(defaultImage);
    google.maps.event.addListener(marker, 'click', toggleBounce);

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
  }




-->


<!--


  var map;
  var markers = [];
  var unitedStates = new google.maps.LatLng(42.3584308, -71.0597732);



  var mapOptions = {
      zoom: 12,
      center: unitedStates,
      mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  map = new google.maps.Map(document.getElementById('map'),
  mapOptions);

  // Add autocomplete to Origin and Destination
  var origin = document.getElementById('map_origin');
  var destination = document.getElementById('map_destination');
  var org = new google.maps.places.Autocomplete(origin);
  var dest = new google.maps.places.Autocomplete(destination);

  org.bindTo('bounds', map);
  dest.bindTo('bounds', map);
  var infowindow = new google.maps.InfoWindow();


  // Add and set a marker
  function addMarker(place,image) {
    marker = new google.maps.Marker({
      position: place,
      map: map,
      animation: google.maps.Animation.DROP
    });
    alert('You are about tot set a merker');

    // Push Marker to Aray. Why? Don't know yet.
    markers.push(marker);

  }
    // Define custom destinatino marker
    var destinationMarker = new google.maps.MarkerImage(
    "http://localhost:3000/assets/map_marker_red.png",
    new google.maps.Size(32, 41),
    new google.maps.Point(0, 0),
    new google.maps.Point(17, 34),
    new google.maps.Size(32, 41));

    // Define custom origin marker
    var originMarker = new google.maps.MarkerImage(
    "http://localhost:3000/assets/map_marker_green.png",
    new google.maps.Size(32, 41),
    new google.maps.Point(0, 0),
    new google.maps.Point(17, 34),
    new google.maps.Size(32, 41));

  // Add lister for Origin
  google.maps.event.addListener(org, 'place_changed', function(event) {

    var place = org.getPlace();

    if (place.geometry.location) {
     map.fitBounds(place.geometry.viewport);
    }
    else
    {
      map.setCenter(place.geometry.location);
      map.setZoom(12);
    };
    alert('Origin' + place.geometry.location);
    addMarker(place.geometry.location);

    //Render custom Marker for Origin
    marker.setIcon(originMarker);
    var infowindow = new google.maps.InfoWindow({
      content: '<div class="popup"><h2>Awesome!</h2><p>Drag me and adjust the zoom level.</p><button class="btn btn-large">Button</button>'
    });
    infowindow.open(map,marker);

  });

  // Add lister for Destination
  google.maps.event.addListener(dest, 'place_changed', function(event) {
    var place = dest.getPlace();

    if (place.geometry.location) {
     map.fitBounds(place.geometry.viewport);
    }
    else
    {
      map.setCenter(place.geometry.location);
      map.setZoom(12);
    };
    alert('Destination' + place.geometry.location);
    addMarker(place.geometry.location);

    //Render custom Marker for Destinatin
    marker.setIcon(destinationMarker);
    infowindow.setContent(latLng);
    infowindow.open(Gmaps.map.serviceObject,marker);
  });

google.maps.event.addDomListener(window, 'load', initialize);


-->
