<h1>New map</h1>

<script src="http://maps.googleapis.com/maps/api/js?sensor=true&libraries=places" type="text/javascript"></script>


<%= render 'form' %>

<%= link_to 'Back', maps_path %>

<%= gmaps({
          "map_options" => {"libraries" => ["places"],"auto_adjust" => true,"zoom" => 'defaultZoom' },
	  "markers"     => {"data" => @json },
          })
 %>


<% content_for :scripts do %>
<script type="text/javascript"> 
  function initialize() {
  
  var defaultZoom = 12; // Why zoomed in? Because it looks good.
	var mapOptions = {
	  center: new google.maps.LatLng(42.3584308, -71.0597732),
	  zoom: defaultZoom,
	  mapTypeId: google.maps.MapTypeId.ROADMAP
	};
	var map = new google.maps.Map(document.getElementById('map'),mapOptions);
	
	//  Centering the map in Boston
	var mylat = document.getElementById("map_latitude").value;
	var mylng = document.getElementById("map_longitude").value;
	if (jQuery.isEmptyObject(mylat)) {
	  var mylat = '42.3584308';
	  var mylng = '-71.0597732';
	  var defaultZoom = 12; // decrease zoom to 13 if there is no selection from user.
	};
	
      // set center point of map to be of the Marker or the Default City
      var centrePoint = new google.maps.LatLng(mylat, mylng);
      
      map.setCenter(centrePoint);
      map.setZoom(defaultZoom);
  
  
	
	
	
	// Add autocomplete to Origin and Destination
        var origin = document.getElementById('map_origin');
        var autocomplete = new google.maps.places.Autocomplete(origin);
	var destination = document.getElementById('map_destination');
        var autocomplete = new google.maps.places.Autocomplete(destination);

        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map
        });
	
	
	// update place change
        google.maps.event.addListener(autocomplete, 'place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }

          var image = new google.maps.MarkerImage(
              "http://localhost:3000/assets/pin2.png",
	  new google.maps.Size(20, 35),
	  new google.maps.Point(0, 0),
	  new google.maps.Point(17, 34),
	  new google.maps.Size(20, 35));
          marker.setIcon(image);
          marker.setPosition(place.geometry.location);

	  //

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
          infowindow.open(map, marker);
        });
	
	
	// add a draggable marker
	marker = new google.maps.Marker({
	map:map,
	draggable:true,
	animation: google.maps.Animation.DROP,
	position: centrePoint
      });
      var defaultImage = new google.maps.MarkerImage(
	  "http://localhost:3000/assets/pin2.png",
	  new google.maps.Size(20, 35),
	  new google.maps.Point(0, 0),
	  new google.maps.Point(17, 34),
	  new google.maps.Size(20, 35));
	    marker.setIcon(defaultImage);
	    
      google.maps.event.addListener(marker, 'click', toggleBounce);


        setupClickListener('changetype-all', []);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
	}
	google.maps.event.addDomListener(window, 'load', initialize);
</script>
<% end %>
  


