<% provide(:title, 'Create New Ride')%>

<div class="span8 embos">
  <h1>Post a new ride</h1>
  <hr>
  <%= render 'form' %>
</div>
<div class="span4 pull-right embos">
  <%= render '/shared/map' %>
</div>
  
<!--<a class="tooltip-left"href="#" title="A nice tooltip" >Tooltip Left</a>
<a class="tooltip-right"href="#" title="A nice tooltip" >Tooltip Right</a>
<a class="has-popover"href="#">Popover</a>-->



<% content_for :scripts do %>
  <script type="text/javascript" charset="utf-8">
      var unitedStates = new google.maps.LatLng(42.3584308, -71.0597732);
      var markersArray = [];

      Gmaps.map.callback = function() {
	  placeOrigin(unitedStates);
	  // Add autocomplete to Origin and Destination
	  var start = document.getElementById('ride_origin');
	  var end = document.getElementById('ride_destination');
	  var origin = new google.maps.places.Autocomplete(start);
	  var destination = new google.maps.places.Autocomplete(end);

	  //listen for place on Origin change and get new place location
	  google.maps.event.addListener(origin, 'place_changed', function(event) {
	      clearOverlays();
	      // get the geolocation of new place input
	      var place = origin.getPlace();
	      //alert('Origin changed. A new Marker will be placed at' + place.geometry.location);

	      if (place.geometry.viewport) {
		  Gmaps.map.serviceObject.fitBounds(place.geometry.viewport);
	      }
	      else
	      {
		  Gmaps.map.serviceObject.setCenter(place.geometry.location);
		  Gmaps.map.serviceObject.setZoom(15); // Why 17? Because it looks good.
	      };
	      //set a new Marker
	      placeOrigin(place.geometry.location);
	      markersArray.push(marker);
	  });

	  //listen for place change on Destination and get new place location
	  google.maps.event.addListener(destination, 'place_changed', function(event) {
	      // get the geolocation of new place input
	      var place = destination.getPlace();
	      //alert('Destination changed. A new Marker will be placed at' + place.geometry.location);

	      if (place.geometry.viewport) {
		  // Gmaps.map.serviceObject.setCenter(place.geometry.location);
		  Gmaps.map.serviceObject.fitBounds(place.geometry.viewport);
		  Gmaps.map.serviceObject.setZoom(15); // Why 17? Because it looks good.
	      }
	      //set a new Marker
	      placeDestination(place.geometry.location);
	      markersArray.push(marker);
	  });

      }

      //Clear the markers
      function clearOverlays() {
	  if (markersArray) {
	      for (var i = 0; i < markersArray.length; i++ ) {
		  markersArray[i].setMap(null);
	      }
	  }
	  markersArray.length = 0;
      }

      //Create a New marker for Origin
      function placeOrigin(latLng) {
	  var marker = new google.maps.Marker({
	      position: latLng,
	      map: Gmaps.map.serviceObject,
	      draggable: true,
	      icon: "http://localhost:3000/assets/map_marker_green.png"
	  });
	  markersArray.push(marker);
	  // Set and open infowindow
	  var infowindow = new google.maps.InfoWindow({
	      content: '<p>'+latLng+'</p><input onclick="clearOverlays();" class="btn btn-mini" type=button value="Clear Overlays">'
	  });
	  infowindow.open(Gmaps.map.serviceObject,marker);
      }

      //Create a New marker for Destination
      function placeDestination(latLng) {
	  var marker = new google.maps.Marker({
	      position: latLng,
	      map: Gmaps.map.serviceObject,
	      draggable: true,
	      icon: "http://localhost:3000/assets/map_marker_red.png"
	  });
	  markersArray.push(marker);
	  // Set and open infowindow
	  var infowindow = new google.maps.InfoWindow({
	      content: '<p>Destination</p><input onclick="clearOverlays();" class="btn btn-mini" type=button value="Clear">'
	  });
	  infowindow.open(Gmaps.map.serviceObject,marker);
      }
  </script>
<% end %>
