<% provide(:title, 'About Us') %>
<h1>About Us</h1>
<%= text_field_tag :origin, params[:origin], :data => {:provide => 'typeahead'},:autocomplete=>"off", class: "span5"%>
<hr>


<script src="http://maps.googleapis.com/maps/api/js?sensor=true&libraries=places" type="text/javascript"></script>

<script type="text/javascript">
  <!--
  function initialize() {
	
	var defaultZoom = 16; // Why zoomed in? Because it looks good.
	var mapOptions = {
	  center: new google.maps.LatLng(13.731547730050778, 100.56798934936523),
	  zoom: defaultZoom,
	  mapTypeId: google.maps.MapTypeId.ROADMAP
	};
	var map = new google.maps.Map(document.getElementById('map'),mapOptions);
	
	// I'm Centering the map in Bangkok
	// '13.731547730050778'
	// '100.56798934936523'
	var mylat = document.getElementById("location_lat").value;
	var mylng = document.getElementById("location_lng").value;
	if (jQuery.isEmptyObject(mylat)) {
	  var mylat = '13.731548';
	  var mylng = '100.56799';
	  var defaultZoom = 14; // decrease zoom to 13 if there is no selection from user.
	};
	


        var input = document.getElementById('origin');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map
        });

        google.maps.event.addListener(autocomplete, 'place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }

          var image = new google.maps.MarkerImage(
              place.icon,
              new google.maps.Size(71, 71),
              new google.maps.Point(0, 0),
              new google.maps.Point(17, 34),
              new google.maps.Size(35, 35));
          marker.setIcon(image);
          marker.setPosition(place.geometry.location);

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
          infowindow.open(map, marker);
        });


        setupClickListener('changetype-all', []);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
      }
      google.maps.event.addDomListener(window, 'load', initialize);
//-->
</script>
<div id="map"></div>